buildscript {
    ext {
        kotlinVersion = '1.3.10'
        springBootVersion = '2.1.0.RELEASE'

    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}


allprojects {

    apply plugin: 'java'
    apply plugin: 'kotlin'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'kotlin-spring'
    apply plugin: 'io.spring.dependency-management'

    group 'org.miejski'
    version '1.0-SNAPSHOT'

    sourceCompatibility = 1.8

    repositories {
        mavenCentral()
    }

    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }

    dependencies {

        compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.1.0.RELEASE'
        compile('com.fasterxml.jackson.module:jackson-module-kotlin')
        compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
        compile("org.jetbrains.kotlin:kotlin-reflect")
        compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.9.7'

        compile group: 'com.google.guava', name: 'guava', version: '23.0'
        compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.8.1'

        testCompile('org.springframework.boot:spring-boot-starter-test')
        testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.3.1'
        testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.3.1'

        compile group: 'org.apache.kafka', name: 'kafka-streams', version: '2.0.0'
        compile group: 'org.apache.kafka', name: 'kafka-streams-test-utils', version: '2.0.0'
        compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    }

    sourceSets {
        integrationTest {
            java {
                compileClasspath += main.output + test.output
                runtimeClasspath += main.output + test.output
                srcDir file('src/integration/java')
            }
            resources.srcDir file('src/integration/resources')
        }
        main.kotlin.srcDirs += 'src/main/kotlin'
        main.java.srcDirs += 'src/main/java'
    }

    configurations {
        integrationTestCompile.extendsFrom testCompile
        integrationTestRuntime.extendsFrom testRuntime
    }


}


task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test

// https://spring.io/guides/tutorials/spring-boot-kotlin/
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
